/**
 * generated by Xtext 2.10.0
 */
package com.zenika.aicdsl.impl;

import com.zenika.aicdsl.AicdslPackage;
import com.zenika.aicdsl.Scenario;
import com.zenika.aicdsl.Sensor;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sensor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.zenika.aicdsl.impl.SensorImpl#getSensorName <em>Sensor Name</em>}</li>
 *   <li>{@link com.zenika.aicdsl.impl.SensorImpl#getValue <em>Value</em>}</li>
 *   <li>{@link com.zenika.aicdsl.impl.SensorImpl#getTitle <em>Title</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SensorImpl extends ActionImpl implements Sensor
{
  /**
   * The default value of the '{@link #getSensorName() <em>Sensor Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSensorName()
   * @generated
   * @ordered
   */
  protected static final String SENSOR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSensorName() <em>Sensor Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSensorName()
   * @generated
   * @ordered
   */
  protected String sensorName = SENSOR_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final int VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected int value = VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected Scenario title;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SensorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AicdslPackage.Literals.SENSOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSensorName()
  {
    return sensorName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSensorName(String newSensorName)
  {
    String oldSensorName = sensorName;
    sensorName = newSensorName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AicdslPackage.SENSOR__SENSOR_NAME, oldSensorName, sensorName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(int newValue)
  {
    int oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AicdslPackage.SENSOR__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Scenario getTitle()
  {
    if (title != null && title.eIsProxy())
    {
      InternalEObject oldTitle = (InternalEObject)title;
      title = (Scenario)eResolveProxy(oldTitle);
      if (title != oldTitle)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AicdslPackage.SENSOR__TITLE, oldTitle, title));
      }
    }
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Scenario basicGetTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTitle(Scenario newTitle)
  {
    Scenario oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AicdslPackage.SENSOR__TITLE, oldTitle, title));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AicdslPackage.SENSOR__SENSOR_NAME:
        return getSensorName();
      case AicdslPackage.SENSOR__VALUE:
        return getValue();
      case AicdslPackage.SENSOR__TITLE:
        if (resolve) return getTitle();
        return basicGetTitle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AicdslPackage.SENSOR__SENSOR_NAME:
        setSensorName((String)newValue);
        return;
      case AicdslPackage.SENSOR__VALUE:
        setValue((Integer)newValue);
        return;
      case AicdslPackage.SENSOR__TITLE:
        setTitle((Scenario)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AicdslPackage.SENSOR__SENSOR_NAME:
        setSensorName(SENSOR_NAME_EDEFAULT);
        return;
      case AicdslPackage.SENSOR__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case AicdslPackage.SENSOR__TITLE:
        setTitle((Scenario)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AicdslPackage.SENSOR__SENSOR_NAME:
        return SENSOR_NAME_EDEFAULT == null ? sensorName != null : !SENSOR_NAME_EDEFAULT.equals(sensorName);
      case AicdslPackage.SENSOR__VALUE:
        return value != VALUE_EDEFAULT;
      case AicdslPackage.SENSOR__TITLE:
        return title != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sensorName: ");
    result.append(sensorName);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //SensorImpl
