/**
 * generated by Xtext 2.9.0
 */
package com.zenika.generator;

import com.zenika.aicdsl.Battery;
import com.zenika.aicdsl.Gps;
import com.zenika.aicdsl.Scenario;
import com.zenika.aicdsl.Sensor;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGenerator2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class AicdslGenerator implements IGenerator2 {
  private String header;
  
  private String body;
  
  private String footer;
  
  private int testCounter;
  
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    this.testCounter = 1;
    this.header = "";
    this.body = "";
    this.footer = "";
    this.header = "\t\npackage com.zenika.aic.demo.sensor;\n\t\nimport android.hardware.Sensor;\nimport android.support.test.InstrumentationRegistry;\nimport android.support.test.runner.AndroidJUnit4;\nimport android.test.InstrumentationTestCase;\nimport android.util.Log;\n\nimport com.zenika.aic.core.libs.sensor.Device;\nimport com.zenika.aic.core.libs.sensor.SensorsPacket;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.Before;\n\n@RunWith(AndroidJUnit4.class)\npublic class Testing extends InstrumentationTestCase {\n\n\tprivate Device device;\n\tprivate String appName = \"Sensor\";\n\n\n    @Before\n    public void init() {\n        device = new Device(appName, InstrumentationRegistry.getInstrumentation());\n\t}\n";
    this.footer = "\n}\n";
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(_allContents);
    for (final EObject r : _iterable) {
      if ((r instanceof Scenario)) {
        String _body = this.body;
        this.body = (_body + (("\n\t@Test\n    public void test" + Integer.valueOf(this.testCounter)) + "() {"));
        TreeIterator<EObject> _eAllContents = ((Scenario)r).eAllContents();
        /* IteratorExtensions.<EObject>toIterable(_eAllContents); */
        TreeIterator<EObject> _eAllContents_1 = ((Scenario)r).eAllContents();
        Iterable<EObject> _iterable_1 = IteratorExtensions.<EObject>toIterable(_eAllContents_1);
        for (final EObject action : _iterable_1) {
          if ((action instanceof Sensor)) {
            String _body_1 = this.body;
            int _value = ((Sensor)action).getValue();
            String _plus = ("\n\t\tdevice.setValuesForSensor(new float[]{" + Integer.valueOf(_value));
            String _plus_1 = (_plus + "f},Sensor.");
            String _sensorName = ((Sensor)action).getSensorName();
            String _plus_2 = (_plus_1 + _sensorName);
            String _plus_3 = (_plus_2 + ");");
            this.body = (_body_1 + _plus_3);
          } else {
            if ((action instanceof Battery)) {
              String _body_2 = this.body;
              int _value_1 = ((Battery)action).getValue();
              String _plus_4 = ("\n\t\tdevice.getBatteryInstance().setLevel(" + Integer.valueOf(_value_1));
              String _plus_5 = (_plus_4 + ", 100);");
              this.body = (_body_2 + _plus_5);
            } else {
              if ((action instanceof Gps)) {
                String _body_3 = this.body;
                float _lat = ((Gps)action).getLat();
                String _plus_6 = ("\n\t\tdevice.getGPSInstance().setPosition(" + Float.valueOf(_lat));
                String _plus_7 = (_plus_6 + ", ");
                float _lon = ((Gps)action).getLon();
                String _plus_8 = (_plus_7 + Float.valueOf(_lon));
                String _plus_9 = (_plus_8 + ", ");
                float _alti = ((Gps)action).getAlti();
                String _plus_10 = (_plus_9 + Float.valueOf(_alti));
                String _plus_11 = (_plus_10 + ");");
                this.body = (_body_3 + _plus_11);
              }
            }
          }
        }
        String _body_4 = this.body;
        this.body = (_body_4 + "\n\t}\n");
        this.testCounter++;
      }
    }
    fsa.generateFile("Testing.java", "/home/zenika/Desktop/", ((this.header + this.body) + this.footer));
  }
  
  @Override
  public void afterGenerate(final Resource input, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
  }
  
  @Override
  public void beforeGenerate(final Resource input, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
  }
  
  @Override
  public void doGenerate(final Resource input, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    throw new UnsupportedOperationException("TODO: auto-generated method stub");
  }
}
